▭和⬭：执行结点(execution node)：行为树的叶子结点，可以是▭动作结点(action node)或⬭条件结点(condition node)。
对于⬭条件结点(condition node)会在一次tick后立马返回成功或失败的状态信息。
对于▭动作结点(action node)则可以跨越多个tick执行，直到到达它的终结状态。
一般来说，条件结点用于简单的判断(比如钳子是否打开?)，动作结点用于表示复杂的行为(比如打开房门)。

▢和◊：控制结点(control node)：
控制结点是行为树的内部结点，它们定义了遍历其孩子结点的方式。控制结点的孩子可以是执行结点，也可以是控制结点。
→顺序(Sequence)，？备选(Fallback)，⇉并行(Parallel)这3种类型的控制结点可以有任意数量的孩子结点，
它们的区别在于对其孩子结点的处理方式。
而◊装饰(Decorator)结点只能有一个孩子结点，用来对孩子结点的行为进行自定义修改。

→顺序结点：按顺序执行孩子结点直到其中一个孩子结点返回失败状态或所有孩子结点返回成功状态。
?备选结点：按顺序执行孩子结点直到其中一个孩子结点返回成功状态或所有孩子结点返回失败状态。一般用来实现角色的备选行为。
⇉并行结点：“并行执行”所有孩子结点。直到至少M个孩子(M的值在1到N之间)结点返回成功状态或所有孩子结点返回失败状态。
