[main的参数]
int argc: 于参数计数 输入的程序路径及名称也是一个参数所以参数最少为1
char **argv or: char *argv[] ：一个指向字符串数组的指针，差不多等价赋值方法不同
                               argv[0]指向输入的程序路径及名称 argv[n] 指向第n个参数字符串
                               char **argv赋值： char **arg = (char**)malloc(3*sizeof(char*));
                               都可以通过arg[n]来访问
                               
[std::unique_lock和std::lock_guard]                
std::unique_lock比std::lock_guard更灵活，这种灵活性主要体现在以下几点：
lock_guard在构造时或者构造前（std::adopt_lock）就已经获取互斥锁，并且在作用域内保持获取锁的状态，直到作用域结束；而unique_lock在构造时或者构造后（std::defer_lock）获取锁，在作用域范围内可以手动获取锁和释放锁，作用域结束时如果已经获取锁则自动释放锁。
lock_guard锁的持有只能在lock_guard对象的作用域范围内，作用域范围之外锁被释放，而unique_lock对象支持移动操作，可以将unique_lock对象通过函数返回值返回，这样锁就转移到外部unique_lock对象中，延长锁的持有时间。


                               
