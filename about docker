[安装docker]
https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository

[docker version报无权限连接...]
把当前用户加入docker的用户组即可
sudo gpasswd -a ‘username’ docker
newgrp docker #更新

[从docker官方库查找镜像]
docker search ros2

[docker 下载镜像]
docker pull

[docker镜像安装的位置]
sudo ls /var/lib/docker/image/overlay2/
镜像文件在imagedb下，加密
可通过docker images |grep -aiwE ‘osrf’查看

[docker build]
通过Dockerfile创建镜像
docker build -t name/name 'dockerfile path'

[查看运行容器]
docker ps

[查看所有容器]
docker ps -a

[创建容器]
docker run -it -p 11000:11000 osrf/ros:humble-desktop-full /bin/bash # 把主机端口11000的数据转发到docker
可用sudo iptables -t nat -L -n --line-numbers 查看转发表

docker run -it --name=容器名称(自己命名) 镜像名称:镜像版本 号 /bin/bash
docker run -it --name (空格) 容器名称(自己命名) 镜像名称:镜像版本 号 /bin/bash
-it是创建的交互式:创建完成之后直接进度终端
-id是创建守护式:创建完成之后不进入容器
-it创建的容器exit,后台不会继续运行
-id创建的容器exit,后台继续运行
-v 操作在容器创建的过程时候可以将宿主机的目录挂载到容器内
sudo docker run -itd -v ~/docker_test:/home ubuntu /bin/bash

[进入容器]
docker exec -it 容器名称 /bin/bash

[启动容器]
docker start 容器名称

[停止容器]
docker stop 容器名称

[删除容器]
docker rm 容器名称

[查看容器信息]
docker inspect 容器名称
查看ip
sudo docker inspect --format='{{.Name}} - {{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' $(sudo docker ps -aq)


[退出容器]
exit


[网络配置]
一、创建容器时指定网终模式
	docker run -d -p 外部访问端口:容器内端口 --net="网络模式"  -v 本机目录:容器内目录 --name="容器名称" 镜像名 要执行的角本
	docker ps 查看启动的容器列表
	docker ps -a 查看所有的容器列表
	docker start 容器名称	启动容器
	docker restart 容器名称	重启容器
	docker stop 容器名称	停止容器
 
二、已经存在的容器修改网终模式
	1.找到容器的hostconfig.json文件
		find / -name hostconfig.json
		/var/lib/docker/containers/a77c1xxx/hostconfig.json
		/var/lib/docker/containers/cdaccxxx/hostconfig.json
		/var/lib/docker/containers/1cdd6dxxx/hostconfig.json
		/var/lib/docker/containers/15c3bcfxxx/hostconfig.json
		修改配置
		vi /var/lib/docker/containers/a77c1xxx/hostconfig.json
		
		"NetworkMode":"bridge"
		为你想要的 模式
		如
		"NetworkMode":"host"
		当为host时或不做端口印射时"PortBindings": {},可以为空对象
		修改端口绑定	
		"PortBindings":{
			"3306/tcp": [{				//内部端口
				"HostIp": "",
				"HostPort": "3309"		外部访问端口
			}]
		}
        
重启容器
如果遇到修改配置不生效

1关闭容器
systemctl stop docker
2复制备份并修改好配置
3启动容器
systemctl start docker


[docker-compose network_mode=“host”外网访问不了]
主要原因：docker 默认的network是bridge，这个默认会把映射的端口加到宿主机防火墙。而host模式是不会主动加入防火墙的，所以需要添加端口。
开放指定端口
firewall-cmd --zone=public --add-port=3306/tcp --permanent
重启防火墙
firewall-cmd --reload

