rosservice type /spawn | rossrv show 查看rosservice的参数
ps -ef | grep -i rosmaster 查看roscore是否运行



rviz
rviz  -d [文件名] ：rosrun rviz rviz -d `rospack find turtle_tf`/rviz/turtle_rviz.rviz


tf
rosrun tf view_frames 可打印节点图


launch文件标签
■ <launch> 指roslaunch语句的开始和结束。
■ <node> 这是对于节点运行的标签。您可以更改功能包、节点名称和执行名称。
■ <machine> 可以设置运行该节点的PC的名称、address、ros-root和ros-package-path。
■ <include> 您可以加载属于同一个功能包或不同的功能包的另一个launch，并将其作为一个launch
文件来运行。
■ <remap> 可以更改节点名称、话题名称等等，在节点中用到的ROS变量的名称
■ <env> 设置环境变量，如路径和IP（很少使用）。
■ <param> 设置参数名称、类型、值等
■ <rosparam> 可以像rosparam命令一样，查看和修改load、dump和delete等参数信息。
■ <group> 用于分组正在运行的节点。
■ <test> 用于测试节点。类似于<node>，但是有可以用于测试的选项。
■ <arg> 可以在launch文件中定义一个变量，以便在像下面这样运行时更改参数。

example：
<arg>
<launch>
<arg name="update_period" default="10" />
<param name="timing" value="$(arg update_period)"/>
</launch>

package.xml文件标签
■ <?xml> 这是一个定义文档语法的语句，随后的内容表明在遵循xml版本1.0。
■ <package> 从这个语句到最后</package>的部分是ROS功能包的配置部分。
■ <name> 功能包的名称。使用创建功能包时输入的功能包名称。正如其他选项，用户可
以随时更改。
■ <version> 功能包的版本。可以自由指定。
■ <description> 功能包的简要说明。通常用两到三句话描述。
■ <maintainer> 提供功能包管理者的姓名和电子邮件地址。
■ <license> 记录版权许可证。写BSD、MIT、Apache、GPLv3或LGPLv3即可。
■ <url> 记录描述功能包的说明，如网页、错误管理、存储库的地址等。根据功能包的
类型，用户可以填写网站、错误跟踪（bugtracker）或存储库的地址。
■ <author> 记录参与功能包开发的开发人员的姓名和电子邮件地址。如果涉及多位开发人
员，只需在下一行添加<author>标签。
■ <buildtool_depend> 描述构建系统的依赖关系。我们正在使用catkin 构建系统，因此输入catkin。
■ <build_depend> 在编写功能包时写下您所依赖的功能包的名称。
■ <run_depend> 填写运行功能包时依赖的功能包的名称。
■ <test_depend> 填写测试功能包时依赖的功能包名称。
-------------------------------------------------------------------------------

