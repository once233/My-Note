工作流程：

1.声明参数（和默认值）：
node_names为rclcpp::PARAMETER_STRING_ARRAY 参数字符数组
autostart为rclcpp::ParameterValue(false)
bond_timeout为4.0
bond_respawn_max_duration为10.0
attempt_respawn_reconnection为true

2.注册关闭节点前需要执行的回调：
获取node的context【语境（Context）：上下文是 init-shutdown 循环的非全局状态。它还封装了节点和其他实体之间的共享状态。在大多数应用程序中，一个进程中只有一个 ROS 上下文】
往node当前的context中加入关闭节点前的回调

3.从LifecycleNode类里的node_interface 里获取以下当前的参数：
node_names
autostart
bond_timeout
bond_respawn_max_duration
attempt_respawn_reconnection

4.创建回调组
5.创建服务:
  ManageLifecycleNodes服务 和 std_srvs::srv::Trigger服务
  create_service<'server_name'>(const std::string & service_name, CallbackT && callback, const rmw_qos_profile_t & qos_profile, rclcpp::CallbackGroup::SharedPtr group);
 
6.


